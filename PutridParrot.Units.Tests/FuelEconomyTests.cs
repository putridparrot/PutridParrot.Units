// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

using NUnit.Framework;
using FsCheck;
using PropertyAttribute = FsCheck.NUnit.PropertyAttribute;

namespace PutridParrot.Units.Tests
{
	public class KilometrePerLitreTests
	{
		[Property]
		public void FromKilometrePerLitreToUSMilesPerGallonAndBack()
		{
			Prop.ForAll<int>(value =>
			{
				var convertTo = FuelEconomy.KilometrePerLitre.ToUSMilesPerGallon(value);
				var convertBack = FuelEconomy.USMilesPerGallon.ToKilometrePerLitre(convertTo);
				return Is.EqualTo(convertBack).Within(0.01).ApplyTo(value).IsSuccess;
			}).QuickCheckThrowOnFailure();
		}

		[TestCase(109.0, 256.384)]
		[TestCase(9.4, 22.1102)]
		[TestCase(1.3, 3.05779)]
		public void ConvertKnownKilometrePerLitreToUSMilesPerGallon(double input, double expectation)
		{
			var result = FuelEconomy.KilometrePerLitre.ToUSMilesPerGallon(input);
			Assert.AreEqual(expectation, result, 0.01);
		}

		[Property]
		public void FromKilometrePerLitreToMilesPerGallonAndBack()
		{
			Prop.ForAll<int>(value =>
			{
				var convertTo = FuelEconomy.KilometrePerLitre.ToMilesPerGallon(value);
				var convertBack = FuelEconomy.MilesPerGallon.ToKilometrePerLitre(convertTo);
				return Is.EqualTo(convertBack).Within(0.01).ApplyTo(value).IsSuccess;
			}).QuickCheckThrowOnFailure();
		}

		[TestCase(5.0, 14.124)]
		[TestCase(180.0, 508.466)]
		[TestCase(5.4, 15.254)]
		public void ConvertKnownKilometrePerLitreToMilesPerGallon(double input, double expectation)
		{
			var result = FuelEconomy.KilometrePerLitre.ToMilesPerGallon(input);
			Assert.AreEqual(expectation, result, 0.01);
		}

	}
	public class MilesPerGallonTests
	{
		[Property]
		public void FromMilesPerGallonToKilometrePerLitreAndBack()
		{
			Prop.ForAll<int>(value =>
			{
				var convertTo = FuelEconomy.MilesPerGallon.ToKilometrePerLitre(value);
				var convertBack = FuelEconomy.KilometrePerLitre.ToMilesPerGallon(convertTo);
				return Is.EqualTo(convertBack).Within(0.01).ApplyTo(value).IsSuccess;
			}).QuickCheckThrowOnFailure();
		}

		[TestCase(12.0, 4.24807)]
		[TestCase(8.2, 2.90285)]
		[TestCase(0.5, 0.177003)]
		public void ConvertKnownMilesPerGallonToKilometrePerLitre(double input, double expectation)
		{
			var result = FuelEconomy.MilesPerGallon.ToKilometrePerLitre(input);
			Assert.AreEqual(expectation, result, 0.01);
		}

		[Property]
		public void FromMilesPerGallonToUSMilesPerGallonAndBack()
		{
			Prop.ForAll<int>(value =>
			{
				var convertTo = FuelEconomy.MilesPerGallon.ToUSMilesPerGallon(value);
				var convertBack = FuelEconomy.USMilesPerGallon.ToMilesPerGallon(convertTo);
				return Is.EqualTo(convertBack).Within(0.01).ApplyTo(value).IsSuccess;
			}).QuickCheckThrowOnFailure();
		}

		[TestCase(1.4, 1.16574)]
		[TestCase(709.0, 590.36575)]
		[TestCase(0.9, 0.74941)]
		public void ConvertKnownMilesPerGallonToUSMilesPerGallon(double input, double expectation)
		{
			var result = FuelEconomy.MilesPerGallon.ToUSMilesPerGallon(input);
			Assert.AreEqual(expectation, result, 0.01);
		}

	}
	public class USMilesPerGallonTests
	{
		[Property]
		public void FromUSMilesPerGallonToKilometrePerLitreAndBack()
		{
			Prop.ForAll<int>(value =>
			{
				var convertTo = FuelEconomy.USMilesPerGallon.ToKilometrePerLitre(value);
				var convertBack = FuelEconomy.KilometrePerLitre.ToUSMilesPerGallon(convertTo);
				return Is.EqualTo(convertBack).Within(0.01).ApplyTo(value).IsSuccess;
			}).QuickCheckThrowOnFailure();
		}

		[TestCase(23.0, 9.77831)]
		[TestCase(7.0, 2.97601)]
		[TestCase(0.9, 0.382629)]
		public void ConvertKnownUSMilesPerGallonToKilometrePerLitre(double input, double expectation)
		{
			var result = FuelEconomy.USMilesPerGallon.ToKilometrePerLitre(input);
			Assert.AreEqual(expectation, result, 0.01);
		}

		[Property]
		public void FromUSMilesPerGallonToMilesPerGallonAndBack()
		{
			Prop.ForAll<int>(value =>
			{
				var convertTo = FuelEconomy.USMilesPerGallon.ToMilesPerGallon(value);
				var convertBack = FuelEconomy.MilesPerGallon.ToUSMilesPerGallon(convertTo);
				return Is.EqualTo(convertBack).Within(0.01).ApplyTo(value).IsSuccess;
			}).QuickCheckThrowOnFailure();
		}

		[TestCase(109.0, 130.9036)]
		[TestCase(78.2, 93.91432)]
		[TestCase(0.9, 1.08086)]
		public void ConvertKnownUSMilesPerGallonToMilesPerGallon(double input, double expectation)
		{
			var result = FuelEconomy.USMilesPerGallon.ToMilesPerGallon(input);
			Assert.AreEqual(expectation, result, 0.01);
		}

	}
}
